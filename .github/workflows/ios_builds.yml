name: üçè iOS Builds
on:
  push:
    branches: [ master, add-github-actions, implementing-todo-list ]

# Global Settings
env:
  PROJECT_FOLDER: fmod-gdnative
  TARGET: release
  FMOD_EXECUTABLE: fmodstudioapi20002ios.dmg

jobs:
  ios-compilation:
    name: iOS Compilation
    runs-on: "macos-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # Use python 3.x release (works cross platform)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # You can test your matrix by printing the current Python version
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons requests
          python --version
          scons --version

      - name : Installing FMOD
        run: |
          cd ..
          mkdir libs && cd libs
          mkdir fmod && cd fmod
          python ../../${{env.PROJECT_FOLDER}}/get_fmod.py ${{secrets.FMODUSER}} ${{secrets.FMODPASS}} ios
          hdiutil attach ${{env.FMOD_EXECUTABLE}}
          cp -r "/Volumes/FMOD Programmers API iOS/FMOD Programmers API/api" ios
          cd ../../

      # The `godot-cpp`-repository is currently cloned inside of the project folder.
      # This is a limitation of the checkout action and will be fixed in PR#388...
      # For now we'll have to copy the `godot-cpp`-repository ourselves!
      - name: Cloning godot-cpp
        uses: actions/checkout@v2
        with:
          repository: utopia-rise/godot-cpp
          path: godot-cpp
          ref: utopia-3.2
          submodules: recursive

      - name: Compilation
        run: |
          cp -r "godot-cpp" "../godot-cpp"
          cd ../godot-cpp
          scons platform=ios ios_arch=arm64 bits=64 target=${{env.TARGET}} generate_bindings=yes -j4
          cd ../${{env.PROJECT_FOLDER}}
          scons platform=ios ios_arch=arm64 target=${{env.TARGET}}
          ls /Users/runner/work/fmod-gdnative/godot-cpp/bin/
          ls /Users/runner/work/fmod-gdnative/godot-cpp/

      # Unfortunately the `upload-artefact@v2`-action doesn't allow the use of . or ..
      # So we have to use the full path to the compiled godot-cpp library here.
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ios
          path: |
            bin/libGodotFmod.ios.release.arm64.a
            /Users/runner/work/fmod-gdnative/godot-cpp/bin/libgodot-cpp.ios.release.arm64.a
