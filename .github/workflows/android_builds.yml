name: ðŸ¤– Android Builds
on:
  push:
    branches: [ master, add-github-actions, implementing-todo-list ]
    
# Global Settings
# Only use the release target for android, otherwise further modification of the make-files is required!
env:
  PROJECT_FOLDER: fmod-gdnative
  TARGET: release
  FMOD_EXECUTABLE: fmodstudioapi20002android.tar.gz

jobs:
  android-compilation:
    name: Android Compilation
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout
        uses: actions/checkout@v2 
        with:
            submodules: recursive

      - name: Set up Java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      # Use python 3.x release (works cross platform)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons requests
          python --version
          scons --version

      - name : Installing FMOD
        run: |
          cd ..
          mkdir libs && cd libs
          mkdir fmod && cd fmod
          python ../../${{env.PROJECT_FOLDER}}/get_fmod.py ${{secrets.FMODUSER}} ${{secrets.FMODPASS}} android
          tar -xvf ${{env.FMOD_EXECUTABLE}}
          mv fmodstudioapi20002android/api android
          cd ../../

      # The `godot-cpp`-repository is currently cloned inside of the project folder.
      # This is a limitation of the checkout action and will be fixed in PR#388...
      # For now we'll have to copy the `godot-cpp`-repository ourselves!
      - name: Cloning godot-cpp
        uses: actions/checkout@v2
        with:
          repository: utopia-rise/godot-cpp
          path: godot-cpp
          ref: utopia-3.2
          submodules: recursive

      - name: Compilation
        env:
          ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk-bundle
        run: |
          cp -r godot-cpp ../godot-cpp
          cd ../godot-cpp
          scons platform=android bits=64 android_arch=armv7 target=${{env.TARGET}} generate_bindings=yes -j4
          scons platform=android bits=64 android_arch=arm64v8 target=${{env.TARGET}} generate_bindings=yes -j4
          cd ../${{env.PROJECT_FOLDER}}
          $ANDROID_NDK_ROOT/ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk APP_PLATFORM=android-21 NDK_LIBS_OUT=bin/
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: android
          path: |
            bin/armeabi-v7a/libGodotFmod.android.release.armeabi-v7a.so
            bin/arm64-v8a/libGodotFmod.android.release.arm64-v8a.so
